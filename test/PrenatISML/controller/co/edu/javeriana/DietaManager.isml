package co.edu.javeriana ;
import co.edu.javeriana.entities.* ;

controller DietaManager {
	has Persistence<Dieta> persistence;
	has Persistence<Lugares> persistenceLug;
	has DietaPersonal dietapersonal;	
	
	/**
	* Lists all instances of Dieta.
	*/
	default listAll() {
		show DietaList(persistence.findAll());
	}
	
	
	default initTest(){
		-> listAll();
		
	}

	/**
	* Lists instances of Dieta.
	* @param dietaList The list of instances of Dieta to show.
	*/
	listDieta(Collection<Dieta> dietaList) {
		show DietaList(dietaList);
	}
	


	
	createDietaToAdd(Any container, Collection<Dieta> collection) {
		show CreateDietaToAdd(container, collection, new Dieta);
			
	}

	
	

	/**
	* Views an instance of Dieta.
	* @param dieta the Dieta to open.
	*/		
	viewDieta(Dieta dieta) {
		show ViewDieta(dieta);
	}


	/**
	* Edits an existing instance of Dieta.
	* @param dieta the Dieta to open.
	*/			
	editDieta(Dieta dieta) {
		show EditDieta(dieta);
	}

	/**
	* Creates a a new instance of Dieta.
	*/			
	createDieta() {
		show EditDieta(new Dieta);
	}


	/**
	* Saves an instance of Dieta.
	* @param dieta the Dieta to save.
	*/			
	saveDieta(Dieta dieta) {
	if(persistence.isPersistent(dieta)){
		persistence.save(dieta);
	} else {
		persistence.create(dieta);
	}
	-> listAll();
	}

	showMap(Collection<Lugares> model) {
		show RestaurantMapView(model);
	}
	restaurantes(Collection<Lugares> model ,String tipo, Integer maxTamano, Lugares lugar) {
		//.^and("maxTamano < ...")
		model = persistenceLug.selectListResult(lugar, lugar.tipo, "Hospital", lugar); 
	//	query.execute(query.select(Lugares).where(tipo));
		//Collection<Lugares> result = query.execute(query.select(Lugares).where(tipo));
		show RestaurantMapView(model);
	}

	/**
	* Deletes an instance of Dieta.
	* @param dieta the Dieta to delete.
	*/		
	deleteDieta(Dieta dieta) {
		persistence.remove(dieta);
		-> listAll();
	}


}
